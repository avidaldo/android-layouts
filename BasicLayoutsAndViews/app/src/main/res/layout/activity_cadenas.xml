<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ej4_contraintlayout.CadenasActivity">

    <!-- Los botones conforman una cadena vertical. Los TextViews están
    alineados cada uno con su botón (por arriba y abajo para que estén
    centrados con ellos, salvo los empaquetados, que se alinean uno por
    arriba y otro por abajo). Cada botón forma una cadena horizontal con
    TextView, cada uno de ellos con su estilo -->


    <!-- Cadena tipo spread (por defecto): distribuye homogeneamente el
    espacio entre los elementos -->

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintBottom_toTopOf="@+id/button3"
        app:layout_constraintEnd_toStartOf="@id/textView6"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView6"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/orange1"
        android:text="Spread"
        app:layout_constraintBottom_toBottomOf="@+id/button"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/button"
        app:layout_constraintTop_toTopOf="@+id/button" />



    <!-- Cadena spread inside: divide el espacio entre los elementos
    pero no reserva espacio en los bordes hacia parent -->

    <Button
        android:id="@+id/button3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintHorizontal_chainStyle="spread_inside"
        app:layout_constraintBottom_toTopOf="@id/button6"
        app:layout_constraintEnd_toStartOf="@id/textView7"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/button" />

    <TextView
        android:id="@+id/textView7"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/orange1"
        android:text="Spread Inside"
        app:layout_constraintBottom_toBottomOf="@id/button3"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/button3"
        app:layout_constraintTop_toTopOf="@id/button3" />



    <!-- Cadena packed: divide el espacio a los lados de los
     elementos encadenados, que están juntos (podrían separarse
     con margin, pero a los lados del conjunto, el espacio se
     distribuiría -->

    <Button
        android:id="@+id/button6"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintHorizontal_chainStyle="packed"
        app:layout_constraintBottom_toTopOf="@id/button4"
        app:layout_constraintEnd_toStartOf="@id/textView10"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/button3" />

    <TextView
        android:id="@+id/textView10"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/orange1"
        android:text="Packed"
        app:layout_constraintBottom_toBottomOf="@id/button6"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/button6" />



    <!-- Cadena packed con sesgo: podemos desplazar el conjunto
    de elementos a un porcentaje de el espacio que ocupa la cadena.
    En este caso, lo ponemos centrado en 1/4 de la pantalla, o sea
    en el 25%, o sea con el sesgo (bias) a 0.25 -->

    <Button
        android:id="@+id/button4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintHorizontal_chainStyle="packed"
        app:layout_constraintHorizontal_bias="0.25"

        app:layout_constraintBottom_toTopOf="@id/button5"
        app:layout_constraintEnd_toStartOf="@id/textView8"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/button6" />

    <TextView
        android:id="@+id/textView8"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/orange1"
        android:text="Packed"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/button4"
        app:layout_constraintTop_toTopOf="@id/button4" />



    <!-- Cadena con pesos. Funciona parecido a un LinarLayout,
     el espacio se distribuye acorde a los pesos dados. Solo
     tiene sentido con 0dp (aunque se podrían usar también
     márgenes) -->

    <Button
        android:id="@+id/button5"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintHorizontal_weight="1"

        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/textView9"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/button4" />

    <TextView
        android:id="@+id/textView9"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="@color/orange1"
        android:gravity="center"
        android:text="Chain con pesos (anchura a 0dp)"
        app:layout_constraintHorizontal_weight="3"

        app:layout_constraintBottom_toBottomOf="@id/button5"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/button5"
        app:layout_constraintTop_toTopOf="@id/button5" />


</androidx.constraintlayout.widget.ConstraintLayout>